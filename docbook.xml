<?xml version="1.0" encoding="utf-8"?>
<book>
	<info>
		<title>Описание проекта Крестики-нолики</title>
		<author><personname><firstname>Илья</firstname><surname>Молчанов</surname></personname></author>
		<copyright><year>2024</year><holder>Молчанов Илья</holder></copyright>
	</info>
	<chapter>
		<title>Краткое описание</title>
        <para>Проект реализует игру в крестики-нолики с искуственным интеллектом.</para>
		<para>Игра позволяет выбрать сторону, начать игру сначала, а также получать сообщения о результате игр.</para>
	</chapter> 
	<chapter>
		<title>Рассмотрение примеров кода</title>
        <para>Рассмотрим сценарий, когда игрок заходит на страницу с игрой, делает несколько ходов, получает ответные ходы
		от искуственного интеллекта, а затем выигрывает. Он получает сообщение "Вы выиграли!!!".</para>
		<example>
		<title>Пример кода 1</title>
		<programlisting>
		<![CDATA[
		if(checkWin()){
			alert("Вы выиграли!!!");
		}else if(checkDraw()){
			alert("Ничья!!!");
		}else{
			turnAI();
		}]]>
		</programlisting>
		</example>
		<para>Пример кода выше показывает логику проверки после хода игрока. Проверяется, нет ли ничьи или выигрыша игрока, а затем
		ход переходит к искуственному интеллекту. После хода искуственного интелллекта идет похожая логика проверки.</para>
		<para>Рассмотрим сценарий, когда игрока выиграли, высветилось сообщение "Вы проиграли!", но игрок захотел сделать ещё
		один ход.</para>
		<example>
		<title>Пример кода 2</title>
		<programlisting>
		<![CDATA[
		// Проверка столбцов на завершенные линии крестиков или ноликов
		for(let i = 0; i  3; i++){
			let side = matrix[0][i];
			if(matrix[1][i] == side && matrix[2][i] == side && side != 2){
				isEndGame = true;
				return true;
			}
		}]]>
		</programlisting>
		</example>
		<para>Код выше показывает, почему у игрока ничего не получится и он просто будет пытаться безрезультатно тыкать мышкой, пытаясь
		походить после окончания игры.</para>
		<para>Рассмотрим последний сценарий. Игрок пытается походить на то место, куда уже походил соперник. Конечно же код ниже показывает,
		почему и это не получится.</para>
		<example>
		<title>Пример кода 3</title>
		<programlisting>
		<![CDATA[
		if(matrix[matrixY][matrixX] != 2){
			return;
		}]]>
		</programlisting>
		</example>
		<para>Код выше проверяет перед ходом есть ли в данном месте матрицы пустое место (оно обозначается 2, потому что 1 и 0 -
	    крестик и нолик). Если нету, то обработчик события клика мыши останавливает обработку события. То есть результатом сценария будет то,
		что игра никак не будет реагировать на попытки игрока походить на занятое место.</para>
	</chapter> 
</book>